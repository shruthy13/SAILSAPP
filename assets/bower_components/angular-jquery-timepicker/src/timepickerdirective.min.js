angular.module("ui.timepicker",[]).value("uiTimepickerConfig",{step:15}).directive("uiTimepicker",["uiTimepickerConfig","$parse",function(a){var b=function(a){return void 0!==moment&&moment.isMoment(a)&&a.isValid()},c=function(a){return angular.isDefined(a)&&null!==a&&(angular.isDate(a)||b(a))};return{restrict:"A",require:"ngModel",scope:{ngModel:"=",baseDate:"=",uiTimepicker:"="},priority:1,link:function(d,e,f,g){"use strict";var h=angular.copy(a),i=h.asMoment||!1;delete h.asMoment,g.$render=function(){var a=g.$modelValue;if(angular.isDefined(a)&&null!==a&&!c(a))throw new Error("ng-Model value must be a Date or Moment object - currently it is a "+typeof a+".");b(a)&&(a=a.toDate()),e.is(":focus")||e.timepicker("setTime",a)},d.$watch(f.ngModel,function(){g.$render()},!0),h.appendTo=e.parent(),e.timepicker(angular.extend(h,d.uiTimepicker?d.uiTimepicker:{}));var j=function(){var a=g.$modelValue?g.$modelValue:d.baseDate;return b(a)?a.toDate():a},k=function(a){return i?moment(a):a};e.is("input")?g.$parsers.unshift(function(){var a=e.timepicker("getTime",j());return g.$setValidity("time",null!==a),k(a)}):e.on("changeTime",function(){d.$evalAsync(function(){var a=e.timepicker("getTime",j());g.$setViewValue(a)})})}}}]);